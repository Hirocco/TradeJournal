@model TradeJournal.ViewModels.TradesJournalsVM

@{
    ViewData["Title"] = "Details";
}

<h2>@Html.DisplayFor(model => model.Trade.SymbolName) - @Html.DisplayFor(model => model.Trade.PositionType)</h2>
<p>Open - close: @Html.DisplayFor(model => model.Trade.TransactionOpenDate) - @Html.DisplayFor(model => model.Trade.TransactionCloseDate)</p>
<hr/>
<p>RR: @(Math.Round((Model.Trade.TakeProfit - Model.Trade.EntryPrice) / (Model.Trade.EntryPrice - Model.Trade.StopLoss), 2)) | Price Change: @(Math.Round(((Model.Trade.TakeProfit - Model.Trade.EntryPrice) / Model.Trade.EntryPrice) * 100, 2))% | Outcome: @Html.DisplayFor(model => model.Trade.TradeOutcome)$</p>
<hr />


<div class="row flex-row mt-2">
    <div class="col-md-6 h-100 w-100">
        
        @{
            await Html.RenderPartialAsync("~/Views/Journals/AddOrEdit.cshtml", this.Model.Journal);
        }

    </div>
    <div class="col-md-6 h-100 w-100">
        @{
            await Html.RenderPartialAsync("~/Views/Images/Details.cshtml", this.Model.Image);
        }
    </div>
</div>



